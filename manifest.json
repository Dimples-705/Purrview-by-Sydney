## manifest.json
```json
{
  "manifest_version": 3,
  "name": "AI Article Summarizer (Local, Free)",
  "version": "1.0.0",
  "description": "Summarize articles, blogs, and news using local AI (free). Optional in-browser Transformers for highâ€‘quality abstractive summaries.",
  "permissions": [
    "activeTab",
    "scripting",
    "storage",
    "contextMenus",
    "tabs"
  ],
  "host_permissions": [
    "<all_urls>",
    "https://huggingface.co/*",
    "https://cdn.jsdelivr.net/*"
  ],
  "background": {
    "service_worker": "background.js",
    "type": "module"
  },
  "action": {
    "default_title": "Summarize this page",
    "default_popup": "popup/popup.html",
    "default_icon": {
      "16": "icons/16.png",
      "32": "icons/32.png",
      "128": "icons/128.png"
    }
  },
  "icons": {
    "16": "icons/16.png",
    "32": "icons/32.png",
    "128": "icons/128.png"
  },
  "content_scripts": [
    {
      "matches": ["<all_urls>"],
      "js": ["vendor/Readability.js", "content-script.js"],
      "run_at": "document_idle"
    }
  ],
  "web_accessible_resources": [
    {
      "resources": [
        "vendor/transformers.min.js",
        "popup/*",
        "summarizers/*"
      ],
      "matches": ["<all_urls>"]
    }
  ],
  "options_ui": {
    "page": "options/options.html",
    "open_in_tab": true
  }
}
```

---

## background.js
```js
// background.js (MV3 service worker)
browser.runtime.onInstalled.addListener(() => {
  browser.contextMenus.create({
    id: "ai-summarize",
    title: "Summarize with AI",
    contexts: ["page", "selection"]
  });
});

browser.contextMenus.onClicked.addListener(async (info, tab) => {
  if (info.menuItemId !== "ai-summarize") return;
  try {
    const [{ result }] = await browser.scripting.executeScript({
      target: { tabId: tab.id },
      func: () => {
        return new Promise((resolve) => {
          document.dispatchEvent(new CustomEvent("__AISUMMARIZER_REQUEST__"));
          const handler = (e) => {
            document.removeEventListener("__AISUMMARIZER_RESPONSE__", handler);
            resolve({
              title: document.title,
              url: location.href,
              content: e.detail?.content || document.body.innerText
            });
          };
          document.addEventListener("__AISUMMARIZER_RESPONSE__", handler, { once: true });
        });
      }
    });

    // Open popup and send payload
    await browser.storage.session.set({ lastExtraction: result });
    await browser.action.openPopup();
  } catch (e) {
    console.error(e);
  }
});
```

---
